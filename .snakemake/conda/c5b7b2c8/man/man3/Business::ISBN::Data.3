.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Business::ISBN::Data 3"
.TH Business::ISBN::Data 3 "2015-12-15" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Business::ISBN::Data \- data pack for Business::ISBN
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
see Business::ISBN
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You don't need to load this module yourself in most cases. \f(CW\*(C`Business::ISBN\*(C'\fR
will load it when it loads.
.PP
These data are generated from the \fIRangeMessage.xml\fR file provided by
the \s-1ISBN\s0 Agency. You can retrieve this yourself at <https://www.isbn\-international.org/range_file_generation>.
This file is included as part of the distribution and should be installed
at \fI~lib/Business/ISBN/Data/RangeMessage.xml\fR.
.PP
If you want to use a different \fIRangeMessage.xml\fR file, you can set
the \f(CW\*(C`ISBN_RANGE_MESSAGE\*(C'\fR environment variable to the alternate location
before you load \f(CW\*(C`Business::ISBN\*(C'\fR. This way, you can use the latest (or
even earlier) data without having to install something new or wait for
an update to this module.
.PP
If the default \fIRangeMessage.xml\fR or your alternate one is not available,
the module falls back to data included in \fIData.pm\fR. However, that data
is likely to be older data. If it does not find that file, it looks
for \fIRangeMessage.xml\fR in the current directory.
.PP
The data are in \f(CW%Business::ISBN::country_data\fR (although the \*(L"country\*(R"
part is historical). If you want to see where the data are from, check
\&\f(CW$Business::ISBN::country_data{_source}\fR.
.SH "SOURCE AVAILABILITY"
.IX Header "SOURCE AVAILABILITY"
This module lives in the Github repository with Business::ISBN:
.PP
.Vb 1
\&        git://github.com/briandfoy/business\-\-isbn.git
.Ve
.PP
If you have something to add, create a fork on Github and send a
pull request.
.SH "AUTHOR"
.IX Header "AUTHOR"
brian d foy, \f(CW\*(C`<bdfoy@cpan.org>\*(C'\fR
.PP
Yakov Shafranovich updated the data in October 2008.
.PP
Daniel Jakubik updated the data in July 2012.
.PP
Markus Spann suggested looking for \fIRangeMessage.xml\fR in the current
directory to make it work with Perl app bundlers.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright Â© 2002\-2015, brian d foy <bdfoy@cpan.org>. All rights reserved.
.PP
You may redistribute this under the same terms as Perl itself.
